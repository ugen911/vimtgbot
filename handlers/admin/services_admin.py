from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from config import ADMINS
from filters.is_admin import IsAdmin
from keyboards.main_menu import back_menu
from .services_admin_states import ManageService

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –ø–æ–¥–º–æ–¥—É–ª–∏
from .services_admin_add import router as add_router
from .services_admin_edit import router as edit_router
from .services_admin_delete import router as delete_router


router = Router()
router.message.filter(IsAdmin())

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥–º–æ–¥—É–ª–µ–π
router.include_router(add_router)
router.include_router(edit_router)
router.include_router(delete_router)


@router.message(F.text == "/admin_services")
async def admin_services_menu(message: types.Message, state: FSMContext):
    if message.from_user.id not in ADMINS:
        return await message.answer("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")

    await state.clear()
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É")],
            [types.KeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —É—Å–ª—É–≥—É")],
            [types.KeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å —É—Å–ª—É–≥—É")],
            [types.KeyboardButton(text="üîô –ù–∞–∑–∞–¥")],
        ],
        resize_keyboard=True,
    )
    await state.set_state(ManageService.choosing_action)
    await message.answer("üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∞–º–∏:", reply_markup=keyboard)
