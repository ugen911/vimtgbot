from aiogram import Router, types, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import os
import json
from keyboards.main_menu import main_menu, back_menu
from filters.admin_mode_filter import NotAdminModeFilter

router = Router()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "–ú–µ–Ω—é"
menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="üçΩ –ú–µ–Ω—é –¥–Ω—è")], [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]],
    resize_keyboard=True,
)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é" –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∫–æ–≥–¥–∞ –æ–Ω–∏ –Ω–µ –≤ –∞–¥–º–∏–Ω-—Ä–µ–∂–∏–º–µ)
@router.message(NotAdminModeFilter(), F.text == "üçé –ú–µ–Ω—é")
async def show_menu(message: types.Message):
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ–Ω—é –∏–∑ JSON
    with open("data/menu.json", encoding="utf-8") as f:
        data = json.load(f)

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–µ–Ω—é
    menu_items = data.get("menu_items", [])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–µ–Ω—é
    for item in menu_items:
        name = item["name"]
        description = item["description"]
        media_list = item.get("media", [])

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        message_text = f"<b>{name}</b>\n{description}"
        await message.answer(message_text, parse_mode="HTML", reply_markup=back_menu)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞ (—Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ)
        if not media_list:
            await message.answer("‚ùå –ú–µ–¥–∏–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", reply_markup=back_menu)
        else:
            for media_file in media_list:
                file_path = os.path.join("media", "–º–µ–Ω—é", media_file)
                if os.path.exists(file_path):
                    if media_file.endswith(".mp4"):
                        await message.answer_video(types.FSInputFile(file_path))
                    else:
                        await message.answer_photo(types.FSInputFile(file_path))
                else:
                    await message.answer(
                        f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {media_file}", reply_markup=back_menu
                    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏–µ–º–∞ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ (–∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–ª–æ–∂–µ–Ω–∏—è)
@router.message(F.content_type.in_(["photo", "video"]))
async def handle_media(message: types.Message):
    if message.photo:
        # –ü–æ–ª—É—á–∞–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
        file_id = message.photo[-1].file_id
        file = await message.bot.get_file(file_id)
        file_path = file.file_path
        await message.answer(
            f"–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ! –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: {file_path}", reply_markup=main_menu
        )

    elif message.video:
        file_id = message.video.file_id
        file = await message.bot.get_file(file_id)
        file_path = file.file_path
        await message.answer(
            f"–í–∏–¥–µ–æ –ø–æ–ª—É—á–µ–Ω–æ! –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: {file_path}", reply_markup=main_menu
        )


# –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@router.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def go_back(message: types.Message):
    await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu)
